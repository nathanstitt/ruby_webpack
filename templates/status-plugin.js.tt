/* eslint-disable */
"use strict";

var webpack = require("webpack");
// var net = require("net");
// var SocketIOClient = require("socket.io-client");

function noop() {}

function DashboardPlugin(options) {
    this.options = options;
}

function log(type, value) {
    console.log('STATUS:', JSON.stringify({type, value}));
}


DashboardPlugin.prototype.apply = function(compiler) {
    var timer;

    // console.log(compiler.options);

    if ( compiler.options.devServer ) {
        let {port, host, outputPath} = compiler.options.devServer;
        log("dev-server", { port, host, outputPath });
    }

    compiler.apply(new webpack.ProgressPlugin(function (percent, msg) {
        log("compile", {
            "progress":  percent,
            "operation": msg,
            "ms": Date.now() - timer
        });
    }));

    compiler.plugin("compile", function() {
        timer = Date.now();
        log("compile", {
            "progress":  0,
            "operation": "idle"
        })
    });

    compiler.plugin("invalid", function() {
        log("status", "Invalidated");
    });

    compiler.plugin("after-emit", function(c) {
        for (var k in c.assets){
            log("asset", {name: k, size: c.assets[k].size()});
        }
    });

    compiler.plugin("done", function(stats) {
        log("status", "success");
    });

    compiler.plugin("failed", function() {
        log("status", "failed");
    });
    compiler.plugin("valid", function() {
        log("status", "valid");
    });

}

module.exports = DashboardPlugin;
